/*
 * fat_toolbox.c
 *
 *  Created on: 12 nov. 2012
 *      Author: Evangelina Lolivier-Exler
 */

#include "stddefs.h"
#include "ff.h"
#include "lcd_toolbox.h"
#include "lcd.h"
#include "fat_toolbox.h"
#include <string.h>
#include <stdio.h>

#define FONT_WIDTH		8
#define FONT_HEIGHT 	16


ulong line_nb,current_y;
uchar lcd_line[CHAR_PER_LINE];

/* data buffer, size : 10 clusters, 1 cluster = 8 blocks of 512 B */
uchar buff[MAX_FILE_SIZE];


int create_file(char *file_name,uchar *data,ulong nbyte)
{

	return 0;
}




int line = 300;

/* path is "" for the root directory */
void scan_files (char* path)
{
    FILINFO finfo;
    DIR dirs;
    int i;
	char str[100];

    if (f_opendir(&dirs, path) == FR_OK) {
        i = strlen(path);
        while ((f_readdir(&dirs, &finfo) == FR_OK) && finfo.fname[0]) {
            if (finfo.fattrib & AM_DIR) {
                sprintf(path+i, "/%s", &finfo.fname[0]);
                scan_files(path);
                *(path+i) = '\0';
            } else {
            	sprintf(str, "%s/%s\n", path, &finfo.fname[0]);
            	fb_print_string(str, 150, line, 15);
            	line += 16;
            }
        }
    }
}

int read_file(char *file_name)
{
	FIL fsrc;
	int nCharRed = 8;
	char buffer[8*512];

	f_open(&fsrc, file_name, FA_OPEN_EXISTING | FA_READ);

	while(nCharRed >= 8){
		f_read(&fsrc, buffer, 8, &nCharRed);
	}

	f_close(&fsrc);

	clear_screen();
	fb_print_string((uchar *) "read_file : Function not implemented",20, 20, lcd_fg_color);

    return 0;
}


int print_file_info(char *file_name)
{

	clear_screen();
	fb_print_string((uchar *) "print_file_info : Function not implemented",20, 20, lcd_fg_color);

	return 0;
}

int run_app(char *file_name)
{

	clear_screen();
	fb_print_string((uchar *) "run_app : Function not implemented",20, 40, lcd_fg_color);

	return 0;
}

